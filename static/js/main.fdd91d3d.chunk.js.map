{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","result","setResult","filterItem","setFilterItem","useEffect","fetch","then","response","json","data","catch","err","console","log","id","type","onChange","event","entered","target","value","toLowerCase","filter","el","indexOf","map","item","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6JAEe,SAASA,IACtB,MAA4BC,mBAAmB,IAA/C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,mBAAmB,IAAvD,mBAAOG,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACRC,MAAM,yCACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJR,EAAUQ,GACVN,EAAcM,MAEfC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEb,IASH,OACE,gCACE,uBAAOG,GAAG,WAAWC,KAAK,OAAOC,SATpB,SAACC,GAChB,IAAMC,EAAUD,EAAME,OAAOC,MAAMC,cACnClB,EAAcH,EAAOsB,QACnB,SAAAC,GAAE,OAA2C,IAAvCA,EAAGF,cAAcG,QAAQN,UAO/B,6BACChB,EAAWuB,KAAI,SAACC,EAAMC,GAAP,OAAkB,6BAAiBD,GAARC,WC3BjD,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACxC,EAAD,MAEFyC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.fdd91d3d.chunk.js","sourcesContent":["import { useState, useEffect, ChangeEvent } from 'react';\n\nexport default function App() {\n  const [result, setResult] = useState<string[]>([]);\n  const [filterItem, setFilterItem] = useState<string[]>([]);\n\n  useEffect(() => {\n    fetch('https://api.publicapis.org/categories')\n    .then(response => response.json())\n    .then(data => {\n      setResult(data);\n      setFilterItem(data);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n  }, []);\n\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const entered = event.target.value.toLowerCase();\n    setFilterItem(result.filter(\n      el => el.toLowerCase().indexOf(entered) !== -1\n    ));\n  }\n\n  return (\n    <div>\n      <input id=\"category\" type=\"text\" onChange={onChange} />\n      <ul>\n      {filterItem.map((item, index) => (<li key={index}>{item}</li>))}\n      </ul>\n    </div>\n  )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}